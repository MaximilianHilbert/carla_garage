img_seq_len: 1  # at least 1, because later in the baseline the action prediction error is calculated over the full list of images in the dataset
lidar_seq_len: 0
use_color_aug: 0
number_previous_waypoints: 9 #means that 8 previous waypoints get used to predict the future 8 (it is n-1)
number_future_waypoints: 9 # current is counted
augment: 0
epochs_baselines: 30 # 3 is minimum due to poor implementation
######################################################### unused dummy for generating name; delete later#########################################
model_type: 'coil-icra' # the type of model. defines which modules the model has.
model_configuration:  # based on the model_type, we specify the structure
  perception:  # the module that process the image input, it ouput the number of classes
    res:
      name: 'resnet34'
      num_classes: 512
  measurements:  # the module the process the input float data, in this case speed_input
    fc:  # easy to configure fully connected layer
      neurons: [128, 128] # each position add a new layer with the specified number of neurons
      dropouts: [0.0, 0.0]
  join:  # the module that joins both the measurements and the perception
    fc:
      neurons: [512]
      dropouts: [0.0]
  speed_branch:  # the prediction branch speed branch
    fc:
      neurons: [256, 256]
      dropouts: [0.0, 0.5]
  branches:  # the output branches for the different possible directions ( straight, left, right, none)
    number_of_branches: 4
    fc:
      neurons: [256, 256]
      dropouts: [0.0, 0.5]
pre_trained: true  # if the weights are started with imagenet.
use_wp_gru: true
