IMAGE_SEQ_LEN: 7  #Watch out, this is equivalent to placing n+1 in the old baseline implementation. IMAGE_SEQ_LEN=1 meaning no historic information, just current frame
NUMBER_PREVIOUS_ACTIONS: 1 # Number of previous actions to prediction current action
MODEL_TYPE: 'coil-policy' # The type of model. Defines which modules the model has.
MODEL_CONFIGURATION:  # Based on the MODEL_TYPE, we specify the structure
  memory_dim: 512
  perception:  # The module that process the image input, it ouput the number of classes
    res:
      name: 'resnet34'
      num_classes: 512
  measurements:  # The module the process the input float data, in this case speed_input
    fc:  # Easy to configure fully connected layer
      neurons: [128, 128] # Each position add a new layer with the specified number of neurons
      dropouts: [0.0, 0.0]
  join:  # The module that joins both the measurements and the perception
    fc:
      neurons: [512]
      dropouts: [0.0]
  speed_branch:  # The prediction branch speed branch
    fc:
      neurons: [256, 256]
      dropouts: [0.0, 0.5]
  branches:  # The output branches for the different possible directions ( Straight, Left, Right, None)
    number_of_branches: 6
    fc:
      neurons: [256, 256]
      dropouts: [0.0, 0.5]

MEM_EXTRACT_MODEL_TYPE: 'coil-memory' # The type of model. Defines which modules the model has.
MEM_EXTRACT_MODEL_CONFIGURATION:  # Based on the MODEL_TYPE, we specify the structure
  perception:  # The module that process the image input, it ouput the number of classes
    res:
      name: 'resnet34'
      num_classes: 512
  speed_branch:  # The prediction branch speed branch
    fc:
      neurons: [256, 256]
      dropouts: [0.0, 0.5]
  branches:  # The output branches for the different possible directions ( Straight, Left, Right, None)
    number_of_branches: 6
    fc:
      neurons: [256, 256]
      dropouts: [0.0, 0.5]

PRE_TRAINED: True  # If the weights are started with imagenet.
LEARNING_RATE: 0.0002  # First learning rate, default set by baseline
